import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit
import scipy.stats.distributions

data = np.loadtxt('Gases_data')
d1 = data[:, 0]
p1 = data[:, 1]
s1 = data[:, 2]
r1 = data[:, 6]

t2 = data[:, 3]
p2 = data[:, 4]
s2 = data[:, 5]
r2 = data[:, 7]

plt.errorbar(d1, p1, yerr = s1, fmt = '.', capsize = 3)
plt.xlabel('Box width [nm]')
plt.ylabel('Gas pressure [kPa]')
plt.title('Dependence of gas pressure on box width in isothtrmal conditions')
plt.show()
plt.errorbar(t2, p2, yerr = s2, fmt = '.', capsize = 3)
plt.xlabel('Temperature ['r'$\degree$' 'C]')
plt.ylabel('Gas pressure [kPa]')
plt.title('Dependence of gas pressure on temperature in isochoric conditions')
plt.show()

def f(d1, a):
    return a/d1

par, cov = curve_fit(f, d1, p1, sigma = s1, absolute_sigma= True)

print("Fitted parameters for isotherm: ", par)
print("a parameter uncertainly", np.sqrt(np.diag(cov)))
print('Critical chi squared: ', scipy.stats.distributions.chi2.isf(0.05, 19))
print('p value: ', 1 - scipy.stats.distributions.chi2.cdf(5.996406961, 19))


def g(t2, b, c):
    return t2 * b + c

par, cov = curve_fit(g, t2, p2, sigma = s2, absolute_sigma=True)
print("Fitted parameters for isochore: ", par)
print("b and c parameter uncertainly", np.sqrt(np.diag(cov)))
print("Covariance: ", cov[0,1])



plt.plot(d1, r1, 'go')
plt.xlabel('Box width [nm]')
plt.ylabel('Difference between fitted and measured pressure [kPa]')
plt.title('Residual sum of squares - isotherm')
plt.show()

plt.plot(t2, r2, 'go')
plt.xlabel('Temperature ['r'$\degree$' 'C]')
plt.ylabel('Difference between fitted and measured pressure [kPa]')
plt.title('Residual sum of squares - isochore')
plt.show()
